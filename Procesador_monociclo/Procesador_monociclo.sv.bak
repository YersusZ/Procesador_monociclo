module Procesador_monociclo(Clk);
	input logic Clk;
	logic [31:0]Out_PC;
	logic [31:0]Out_Instruction;
	logic RUWr;
	logic [2:0]ImmSrc;
	logic AluASrc;
	logic AluBSrc;
	logic [4:0]BrOp;
	logic [3:0]ALUOp;
	logic DMWr;
	logic [2:0]DMCtrl;
	logic [1:0]RUDataWrSrc;
	logic [31:0]rs1;
	logic [31:0]rs2;
	logic NextPCSrc;
	logic [31:0]ImmExt;
	logic [31:0]MuxA;
	logic [31:0]MuxB;
	logic [31:0]Alu_out;
	logic [31:0]DataRd;
	logic [31:0]MuxRUDataWrSrc;
	logic [31:0]Suma;
	logic [31:0]MuxSalto;
	
	Data_memory dut(
	.Address(Alu_out),
	.DataWr(rs2),
	.DMWr(DMWr),
	.DMCtrl(DMCtrl),
	.DataRd(DataRd)
	);
	
	
	ALU dut (
	.A(MuxA),
	.B(MuxB),
	.ALUOp(ALUOp),
	.Alu_out(Alu_out)
	);
	
	
		Imm_unit dut(
	.ImmIn(Out_Instruction[31:7]),
	.ImmSrc(ImmSrc),
	.ImmExt(ImmExt)
	);
	
	
	
	Register_unit dut(
	.Clk(Clk),
	.RuDataWr(MuxRUDataWrSrc),
	.Rs1(Out_Instruction[19:15]),
	.Rs2(Out_Instruction[24:20]),
	.Rd(Out_Instruction[11:7]),
	.RuWr(RUWr),
	.RuRs1(rs1),
	.RuRs2(rs2),
	 );
	
	Control_unit dut(
	.OpCode(Out_Instruction[6:0]),
	.Funct3(Out_Instruction[14:12]),
	.Funct7(Out_Instruction[31:25]),
	.RUWr(RUWr),
	.ImmSrc(ImmSrc),
	.AluASrc(AluASrc),
	.AluBSrc(AluBSrc),
	.BrOp(BrOp),
	.ALUOp(AluOp),
	.DMWr(DMWr),
	.DMCtrl(DMCtrl),
	.RUDataWrSrc(RUDataWrSrc)
	);
	
	
	Instruction_memory dut(
	.Address(out_PC),
	.Instruction_memory(Out_Instruction)
	);
	
	ProgramCounter dut(
	.in(MuxSalto)
	.clk(Clk),
	.out(Out_PC)
	);
	
	Branch_unit dut(
	.In1(rs2),
	.In2(rs1),
	.BrOp(BrOp),
	.NextPCSrc(NextPCSrc)
	);
	
	if(AluASrc) begin
		MuxA = Out_PC;
	end else begin         //MULTIPLEXOR DE LA ENTRADA DEL ALU (A)
		MuxA = rs1;
	end
	
	if(AluBSrc) begin
		MuxB = ImmExt;
	end else begin   			//MULTIPLEXOR DE LA ENTRADA DEL ALU (B)
		MuxB = rs2;
	end
	
	Suma = Out_PC + 4;		//SUMADOR
	
	case(RUDataWrSrc)
		2'b10 : MuxRUDataWrSrc = Suma;
		2'b01 : MuxRUDataWrSrc = DataRd;			//MULTIPLEXOR RUDATAWRSRC
		2'b00 : MuxRUDataWrSrc = Alu_out;	
	endcase
	
	if(NextPCSrc)begin
		MuxSalto = Alu_out;
	end else begin
		MuxSalto = Suma;
	end
	
endmodule
		