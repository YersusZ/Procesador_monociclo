module Imm_unit(ImmIn, ImmSrc, ImmExt);
	input logic [24:0]ImmIn;
	input logic [2:0]ImmSrc;
	output logic [32:0]ImmExt;
	always_comb begin
		if((ImmIn[24] == 0)
			ImmExt = 32'b0;
		else
			ImmExt = 32'b1;
		case(ImmSrc)
				3'b000 : ImmExt[12:0] = ImmIn[24:13];
				3'b001 : ImmExt[12:0] = {ImmIn[24:18],ImmIn[4:0]};
				3'b101 : ImmExt[12:0] = {ImmIn[24], ImmIn[0], ImmIn[23:18], ImmIn[4:1], 0}
				3'b010 : ImmExt[20:0] = ImmIn[24:5];
				3'b110 : ImmExt[20:0] = {ImmIn[24], ImmIn[12:5], ImmIn[13], ImmIn[23:14], 0};
		endcase
	end
endmodule 